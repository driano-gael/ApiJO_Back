Installation
============

Ce guide vous accompagne dans l'installation complète de l'API ApiJO (Jeux Olympiques).

Prérequis
---------

Avant de commencer, assurez-vous d'avoir installé :

- **Python 3.8+** : Version recommandée 3.11 ou supérieure
- **PostgreSQL** : Base de données principale
- **Git** : Pour cloner le projet
- **pip** : Gestionnaire de packages Python

Étape 1 : Clonage du projet
---------------------------

Clonez le repository depuis votre système de contrôle de version :

.. code-block:: bash

   git clone <url-du-repository>
   cd ApiJO_Back

Étape 2 : Environnement virtuel
-------------------------------

Créez et activez un environnement virtuel Python :

**Sur Windows :**

.. code-block:: batch

   python -m venv .venv
   .venv\Scripts\activate

**Sur Linux/MacOS :**

.. code-block:: bash

   python -m venv .venv
   source .venv/bin/activate

Étape 3 : Installation des dépendances
--------------------------------------

Installez toutes les dépendances requises :

.. code-block:: bash

   pip install -r requirements.txt

Les principales dépendances incluent :

- **Django** : Framework web principal
- **Django REST Framework** : Pour l'API REST
- **psycopg2** : Connecteur PostgreSQL
- **djangorestframework-simplejwt** : Authentification JWT
- **django-cors-headers** : Gestion CORS
- **Pillow** : Traitement d'images

Étape 4 : Configuration de la base de données
---------------------------------------------

Créez une base de données PostgreSQL :

.. code-block:: sql

   CREATE DATABASE apijoback;
   CREATE USER apijouser WITH PASSWORD 'votre_mot_de_passe';
   GRANT ALL PRIVILEGES ON DATABASE apijoback TO apijouser;

Étape 5 : Variables d'environnement
-----------------------------------

Créez un fichier `.env` à la racine du projet :

.. code-block:: bash

# Seurité Django
DEBUG= True ou false selon l'environnement
SECRET_KEY='django-insecure-xxx...votre_clef_secrete...xxx'
ALLOWED_HOSTS=127.0.0.1,localhost
CORS_ALLOWED_ORIGINS=http://localhost:3000,http://127.0.0.1:3000,http://localhost:3001,http://127.0.0.1:3001

# JWT Settings
ACCESS_TOKEN_LIFETIME=00:00:30
REFRESH_TOKEN_LIFETIME=08:00:00

# PostgreSQL Settings
DATABASE_NAME= apijoback
DATABASE_USER= apijouser
DATABASE_HOST = localhost
DATABASE_PORT = 5432
DATABASE_PASSWORD=Pnattybre1zh

Étape 6 : Migrations de base de données
---------------------------------------

Appliquez les migrations pour créer les tables :

.. code-block:: bash

   python manage.py makemigrations
   python manage.py migrate

Étape 7 : Création du superutilisateur
--------------------------------------

Créez un compte administrateur :

.. code-block:: bash

   python manage.py createadmin

Étape 8 : Peupler la base de données
--------------------------------------

.. code-block:: bash

   python manage.py populate_jo_2

Étape 9 : Test de l'installation
--------------------------------

Lancez le serveur de développement :

.. code-block:: bash

   python manage.py runserver

Visitez http://127.0.0.1:8000/api/evenements pour vérifier que tout fonctionne.


Problèmes courants
==================

Erreur de connexion PostgreSQL
------------------------------

Vérifiez que :

- PostgreSQL est démarré
- Les paramètres de connexion sont corrects
- L'utilisateur a les bonnes permissions

Erreur de module manquant
-------------------------

.. code-block:: bash

   pip install --upgrade pip
   pip install -r requirements.txt

Erreur de permissions
---------------------

Sur Linux/MacOS, vous pourriez avoir besoin de :

.. code-block:: bash

   sudo chown -R $USER:$USER .
   chmod +x manage.py

Validation de l'installation
============================

Pour vérifier que l'installation est complète :

1. **Serveur démarré** : http://127.0.0.1:8000/
2. **Admin accessible** : http://127.0.0.1:8000/admin/
3. **API fonctionnelle** : http://127.0.0.1:8000/api/
4. **Tests passent** : ``python manage.py test``

Prochaines étapes
=================

Une fois l'installation terminée :

1. Consultez le guide :doc:`configuration` pour personnaliser l'API
2. Lisez le guide :doc:`utilisation` pour commencer à utiliser l'API
3. Explorez la documentation des modules pour comprendre l'architecture
