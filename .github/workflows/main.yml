name: Deploiement API en Production

on:
  push:
    branches:
      - main

jobs:
  test:
    name: Tester l'application
    runs-on: ubuntu-latest
    env:
      DEBUG: "False"
      ALLOWED_HOSTS: "127.0.0.1,localhost"
    steps:
      - uses: actions/checkout@v3
      - run: |
          python -m venv venv
          source venv/bin/activate
          pip install -r requirements.txt
          export SECRET_KEY="${{ secrets.SECRET_KEY }}"
          python manage.py test -v 2

  deploy:
    name: Deployer sur le serveur
    runs-on: ubuntu-latest

    steps:
      - name: etape 1 recupération du code
        uses: actions/checkout@v3

      - name: etape 2 connexion SSH au serveur
        uses: webfactory/ssh-agent@v0.9.0
        with:
          ssh-private-key: ${{ secrets.SSH_PRIVATE_KEY }}

      - name: etape 3 Pull sur serveur
        run: |
          ssh -o StrictHostKeyChecking=no deploy@167.172.53.237 <<'EOF'
            cd ~/apps/ApiJO_Back
            git checkout main
            git pull origin main
          EOF

      - name: etape 4 Gestion Docker
        run: |
          ssh -o StrictHostKeyChecking=no deploy@167.172.53.237 <<'EOF'
            systemctl is-active docker || sudo systemctl start docker
            docker stop apijo || true
            docker rm apijo || true
            cd ~/apps/ApiJO_Back
            docker build --no-cache -t apijo .
            docker run -d --name apijo --network host --restart unless-stopped apijo
            docker image prune -af
          EOF

      - name: etape 5 Vérification de l'API
        run: |
          ssh -o StrictHostKeyChecking=no deploy@167.172.53.237 <<'EOF'
            # Attendre quelques secondes que le container démarre
            sleep 10
            # Tester l'accès à l'API
            curl -s -o /dev/null -w "%{http_code}" http://localhost:3000/api/lieu/ || exit 1
          EOF
        continue-on-error: false